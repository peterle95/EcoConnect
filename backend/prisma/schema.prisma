// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role { 
  INDIVIDUAL
  ORGANIZATION
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  passwordHash    String
  role            Role
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  individualProfile   IndividualProfile? @relation(fields: [individualProfileId], references: [id])
  individualProfileId String?           @unique
  organizationProfile OrganizationProfile? @relation(fields: [organizationProfileId], references: [id])
  organizationProfileId String?         @unique
  
  organizedProjects Project[] @relation("OrganizedProjects")
  volunteeringFor   ProjectVolunteer[]
}

model IndividualProfile {
  id        String   @id @default(uuid())
  user      User     @relation
  fullName  String
  skills    String[]
}

model OrganizationProfile {
  id            String    @id @default(uuid())
  user          User      @relation
  orgName       String
  mission       String
  isVerified    Boolean   @default(false)
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String
  date        DateTime
  location    String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  organizer   User     @relation("OrganizedProjects", fields: [organizerId], references: [id])
  organizerId String

  volunteers  ProjectVolunteer[]
}

model ProjectVolunteer {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  joinedAt  DateTime @default(now())

  @@id([userId, projectId])
}
